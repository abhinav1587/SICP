#+Title: Exercise 3.68
Louis Reasoner thinks that building a stream of pairs from three parts is unnecessarily complicated. Instead of separating the pair (S0,T0)
(S0,T0) from the rest of the pairs in the first row, he proposes to work with the whole first row, as follows:

#+BEGIN_SRC scheme :session 3-68
(define (pairs s t)
  (interleave
   (stream-map
    (lambda (x)
      (list (stream-car s) x))
    t)
   (pairs (stream-cdr s)
          (stream-cdr t))))
#+END_SRC
Does this work? Consider what happens if we evaluate (pairs integers integers) using Louisâ€™s definition of pairs.

It does not. It appears that the evaluation goes into an infinite loop and does not even produce the first occurence of the stream.
