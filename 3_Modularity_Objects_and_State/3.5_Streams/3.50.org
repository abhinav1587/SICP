#+Title: Exercise 3.50
 Exercise 3.50: Complete the following definition, which generalizes stream-map to allow procedures that take multiple arguments, analogous to map in 2.2.1, Footnote 78.

#+BEGIN_SRC scheme :eval no
  (define (stream-map proc . argstreams)
    (if (⟨??⟩ (car argstreams))
        the-empty-stream
        (⟨??⟩
         (apply proc (map ⟨??⟩ argstreams))
         (apply stream-map
                (cons proc 
                      (map ⟨??⟩ 
                           argstreams))))))
#+END_SRC

* Solution
#+BEGIN_SRC scheme
  (define (stream-map proc . argstreams)
    (if (null? (car argstreams))
        the-empty-stream
        (cons-stream
         (apply proc (map stream-car
                          argstreams))
         (apply stream-map
                (cons proc 
                      (map stream-cdr
                           argstreams))))))
#+END_SRC
