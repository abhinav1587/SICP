#+Title: Exercise 3.77

Original integral
#+BEGIN_SRC scheme :eval no
  (define (integral
           integrand initial-value dt)
    (cons-stream 
     initial-value
     (if (stream-null? integrand)
         the-empty-stream
         (integral 
          (stream-cdr integrand)
          (+ (* dt (stream-car integrand))
             initial-value)
          dt))))
#+END_SRC

#+BEGIN_SRC scheme :session 3-77 :exports none
  (add-to-load-path (dirname "./"))

  (use-modules (custom-module stream))
#+END_SRC

#+RESULTS:

Modified integral
#+BEGIN_SRC scheme :session 3-77 :exports both
  (define (integral
           integrand initial-value dt)
    (cons-stream
     initial-value
     (if (stream-null? (force integrand))
         the-empty-stream
         (integral
          (delay (stream-cdr (force integrand)))
          (+ (* dt (stream-car (force integrand)))
             initial-value)
          dt))))

  (define (solve f y0 dt)
    (define y (integral (delay dy) y0 dt))
    (define dy (stream-map f y))
    y)

  (stream-ref 
   (solve (lambda (y) y) 1 0.001) 1000)
#+END_SRC

#+RESULTS:
: 2.716923932235896

