#+Title: Exercise 4.49

Alyssa P. Hacker is more interested in generating interesting sentences than in parsing them. She reasons that by simply changing the procedure `parse-word' so that it ignores the "input sentence" and instead always succeeds and generates an appropriate word, we can use the programs we had built for parsing to do generation instead. Implement Alyssa's idea, and show the first half-dozen or so sentences generated.

#+BEGIN_SRC scheme :session 4-49 :exports none :results output silent
  (use-modules (ice-9 pretty-print))

  (add-to-load-path (dirname "./"))

  (load "./ambeval.scm")
#+END_SRC

#+BEGIN_SRC scheme :session 4-49 :exports both :results output code
  (ambeval-helper
   '(define (parse-word word-list)
      (an-element-of (cdr word-list))))

  (pretty-print
   (ambeval-helper '(parse '())))
#+END_SRC

#+RESULTS:
#+BEGIN_SRC scheme
;;; Starting a new problem 
;;; Starting a new problem 
(sentence
  (simple-noun-phrase the student)
  studies)
#+END_SRC


#+BEGIN_SRC scheme :session 4-49 :exports both :results output code
  (pretty-print (try-again))
#+END_SRC

#+RESULTS:
#+BEGIN_SRC scheme
(sentence
  (simple-noun-phrase the student)
  (verb-phrase
    studies
    (prep-phrase
      for
      (simple-noun-phrase the student))))
#+END_SRC

#+BEGIN_SRC scheme :session 4-49 :exports both :results output code
  (pretty-print (try-again))
#+END_SRC

#+RESULTS:
#+BEGIN_SRC scheme
(sentence
  (simple-noun-phrase the student)
  (verb-phrase
    (verb-phrase
      studies
      (prep-phrase
        for
        (simple-noun-phrase the student)))
    (prep-phrase
      for
      (simple-noun-phrase the student))))
#+END_SRC

#+BEGIN_SRC scheme :session 4-49 :exports both :results output code
  (pretty-print (try-again))
#+END_SRC

#+RESULTS:
#+BEGIN_SRC scheme
(sentence
  (simple-noun-phrase the student)
  (verb-phrase
    (verb-phrase
      (verb-phrase
        studies
        (prep-phrase
          for
          (simple-noun-phrase the student)))
      (prep-phrase
        for
        (simple-noun-phrase the student)))
    (prep-phrase
      for
      (simple-noun-phrase the student))))
#+END_SRC

#+BEGIN_SRC scheme :session 4-49 :exports both :results output code
  (pretty-print (try-again))
#+END_SRC

#+RESULTS:
#+BEGIN_SRC scheme
(sentence
  (simple-noun-phrase the student)
  (verb-phrase
    (verb-phrase
      (verb-phrase
        (verb-phrase
          studies
          (prep-phrase
            for
            (simple-noun-phrase the student)))
        (prep-phrase
          for
          (simple-noun-phrase the student)))
      (prep-phrase
        for
        (simple-noun-phrase the student)))
    (prep-phrase
      for
      (simple-noun-phrase the student))))
#+END_SRC

#+BEGIN_SRC scheme :session 4-49 :exports both :results output code
  (pretty-print (try-again))
#+END_SRC

#+RESULTS:
#+BEGIN_SRC scheme
(sentence
  (simple-noun-phrase the student)
  (verb-phrase
    (verb-phrase
      (verb-phrase
        (verb-phrase
          (verb-phrase
            studies
            (prep-phrase
              for
              (simple-noun-phrase the student)))
          (prep-phrase
            for
            (simple-noun-phrase the student)))
        (prep-phrase
          for
          (simple-noun-phrase the student)))
      (prep-phrase
        for
        (simple-noun-phrase the student)))
    (prep-phrase
      for
      (simple-noun-phrase the student))))
#+END_SRC

